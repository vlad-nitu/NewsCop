stages:
  - build  
  - check
  - test

checkstyle-backend:
  image: ubuntu:20.04
  stage: check
  before_script:
    - apt -y update
    - apt -y install apt-utils
    - apt -y install net-tools python3.8 python3-pip mysql-client libmysqlclient-dev
    - apt -y upgrade
  script:
    - pip install --upgrade pip
    - pip install virtualenv
    - cd backend/
    - virtualenv venv # Create virutalenv name `venv`
    - source venv/bin/activate # activate virtual environment
    - pip install --upgrade pip
    - pip install -r requirements.txt # update requirements
    - pycodestyle app/
    - deactivate


backend-build:
  image: ubuntu:20.04
  stage: build
  before_script:
    - apt -y update
    - apt -y install apt-utils
    - apt -y install net-tools python3.8 python3-pip mysql-client libmysqlclient-dev
    - apt -y upgrade
  script:
    - pip install --upgrade pip
    - pip install virtualenv
    - cd backend/
    - virtualenv venv # Create virutalenv name `venv`
    - source venv/bin/activate # activate virtual environment
    - pip install --upgrade pip
    - pip install -r requirements.txt # update requirements
    - python3 manage.py makemigrations
    - python3 manage.py migrate
    - python3 manage.py check
    - deactivate


backend-test:
  image: ubuntu:20.04
  stage: test
  before_script:
    - apt -y update
    - apt -y install apt-utils
    - apt -y install net-tools python3.8 python3-pip mysql-client libmysqlclient-dev
    - apt -y upgrade
  script:
    - pip install --upgrade pip
    - pip install virtualenv
    - cd backend/
    - virtualenv venv # Create virutalenv name `venv`
    - source venv/bin/activate # activate virtual environment
    - pip install --upgrade pip
    - pip install -r requirements.txt # update requirements
    - coverage run --omit="app/tests/*" manage.py test app/tests
    - coverage html -d ./coverage/
    - coverage report
    - deactivate
  only:
    refs:
      - merge_requests
